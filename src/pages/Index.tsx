import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Switch } from '@/components/ui/switch';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Avatar, AvatarFallback } from '@/components/ui/avatar';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [notifications, setNotifications] = useState(true);
  const [selectedCategories, setSelectedCategories] = useState(['tech', 'business']);

  const newsItems = [
    {
      id: 1,
      title: "–ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò",
      description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∏ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é...",
      category: "tech",
      time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
      emoji: "ü§ñ"
    },
    {
      id: 2,
      title: "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2025 –≥–æ–¥",
      description: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–æ—Å—Ç –≤ IT-—Å–µ–∫—Ç–æ—Ä–µ...",
      category: "business",
      time: "4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
      emoji: "üìà"
    },
    {
      id: 3,
      title: "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏",
      description: "SpaceX —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª–∞ –æ—á–µ—Ä–µ–¥–Ω—É—é –º–∏—Å—Å–∏—é –Ω–∞ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –∫–æ—Å–º–∏—á–µ—Å–∫—É—é —Å—Ç–∞–Ω—Ü–∏—é...",
      category: "space",
      time: "6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
      emoji: "üöÄ"
    }
  ];

  const categories = [
    { id: 'tech', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', emoji: 'üíª', color: 'bg-blue-100 text-blue-800' },
    { id: 'business', name: '–ë–∏–∑–Ω–µ—Å', emoji: 'üíº', color: 'bg-green-100 text-green-800' },
    { id: 'space', name: '–ö–æ—Å–º–æ—Å', emoji: 'üåå', color: 'bg-purple-100 text-purple-800' },
    { id: 'sport', name: '–°–ø–æ—Ä—Ç', emoji: '‚öΩ', color: 'bg-orange-100 text-orange-800' }
  ];

  const toggleCategory = (categoryId: string) => {
    setSelectedCategories(prev => 
      prev.includes(categoryId) 
        ? prev.filter(id => id !== categoryId)
        : [...prev, categoryId]
    );
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-4xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-500 rounded-lg flex items-center justify-center">
                <Icon name="Send" size={20} className="text-white" />
              </div>
              <div>
                <h1 className="text-xl font-bold text-gray-900">NewsBot</h1>
                <p className="text-sm text-gray-500">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏</p>
              </div>
            </div>
            <Badge variant="secondary" className="bg-green-100 text-green-800">
              <Icon name="Wifi" size={14} className="mr-1" />
              –û–Ω–ª–∞–π–Ω
            </Badge>
          </div>
        </div>
      </div>

      <div className="max-w-4xl mx-auto px-4 py-6">
        <Tabs defaultValue="news" className="space-y-6">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="news" className="flex items-center space-x-2">
              <Icon name="Newspaper" size={16} />
              <span>–ù–æ–≤–æ—Å—Ç–∏</span>
            </TabsTrigger>
            <TabsTrigger value="settings" className="flex items-center space-x-2">
              <Icon name="Settings" size={16} />
              <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
            </TabsTrigger>
            <TabsTrigger value="stats" className="flex items-center space-x-2">
              <Icon name="BarChart3" size={16} />
              <span>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
            </TabsTrigger>
          </TabsList>

          {/* –ù–æ–≤–æ—Å—Ç–∏ */}
          <TabsContent value="news" className="space-y-4">
            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="flex items-center space-x-2">
                    <Icon name="Bell" size={20} className="text-blue-500" />
                    <span>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NewsBot! üëã</span>
                  </CardTitle>
                  <Button size="sm">
                    /start
                  </Button>
                </div>
                <CardDescription>
                  –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center">
                  <img 
                    src="/img/4e589d8d-e4be-4867-8b34-caf8147af273.jpg" 
                    alt="NewsBot Interface Preview" 
                    className="rounded-lg shadow-md max-w-xs"
                  />
                </div>
              </CardContent>
            </Card>

            <div className="grid gap-4">
              {newsItems.map((item) => (
                <Card key={item.id} className="hover:shadow-md transition-shadow animate-fade-in">
                  <CardHeader className="pb-3">
                    <div className="flex items-start justify-between">
                      <div className="flex items-center space-x-3">
                        <div className="text-2xl">{item.emoji}</div>
                        <div>
                          <CardTitle className="text-lg">{item.title}</CardTitle>
                          <CardDescription className="mt-1">
                            {item.description}
                          </CardDescription>
                        </div>
                      </div>
                      <Badge 
                        className={categories.find(c => c.id === item.category)?.color}
                      >
                        {categories.find(c => c.id === item.category)?.name}
                      </Badge>
                    </div>
                  </CardHeader>
                  <CardContent className="pt-0">
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-gray-500 flex items-center">
                        <Icon name="Clock" size={14} className="mr-1" />
                        {item.time}
                      </span>
                      <div className="flex space-x-2">
                        <Button size="sm" variant="outline">
                          <Icon name="Share" size={14} className="mr-1" />
                          –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                        </Button>
                        <Button size="sm">
                          <Icon name="ExternalLink" size={14} className="mr-1" />
                          –ß–∏—Ç–∞—Ç—å
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          <TabsContent value="settings" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Icon name="User" size={20} />
                  <span>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center space-x-4">
                  <Avatar className="w-16 h-16">
                    <AvatarFallback className="bg-blue-500 text-white text-xl">
                      –ù–ë
                    </AvatarFallback>
                  </Avatar>
                  <div>
                    <h3 className="font-semibold">@newsbot_user</h3>
                    <p className="text-sm text-gray-500">–ê–∫—Ç–∏–≤–µ–Ω —Å —è–Ω–≤–∞—Ä—è 2024</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Icon name="Bell" size={20} />
                  <span>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-medium">–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                    <p className="text-sm text-gray-500">–ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</p>
                  </div>
                  <Switch 
                    checked={notifications} 
                    onCheckedChange={setNotifications}
                  />
                </div>
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-medium">–î–∞–π–¥–∂–µ—Å—Ç —É—Ç—Ä–æ–º</h4>
                    <p className="text-sm text-gray-500">–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ –≤ 9:00</p>
                  </div>
                  <Switch defaultChecked />
                </div>
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-medium">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç</h4>
                    <p className="text-sm text-gray-500">–°–≤–æ–¥–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º</p>
                  </div>
                  <Switch />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Icon name="Tags" size={20} />
                  <span>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π</span>
                </CardTitle>
                <CardDescription>
                  –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å —Ç–µ–º—ã
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 gap-3">
                  {categories.map((category) => (
                    <div
                      key={category.id}
                      onClick={() => toggleCategory(category.id)}
                      className={`
                        p-3 rounded-lg border cursor-pointer transition-all
                        ${selectedCategories.includes(category.id) 
                          ? 'border-blue-500 bg-blue-50' 
                          : 'border-gray-200 hover:border-gray-300'
                        }
                      `}
                    >
                      <div className="flex items-center space-x-2">
                        <span className="text-lg">{category.emoji}</span>
                        <span className="font-medium">{category.name}</span>
                        {selectedCategories.includes(category.id) && (
                          <Icon name="Check" size={16} className="text-blue-500 ml-auto" />
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <TabsContent value="stats" className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <Card>
                <CardHeader className="text-center">
                  <CardTitle className="text-3xl font-bold text-blue-600">127</CardTitle>
                  <CardDescription>–ü—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π</CardDescription>
                </CardHeader>
              </Card>
              <Card>
                <CardHeader className="text-center">
                  <CardTitle className="text-3xl font-bold text-green-600">32</CardTitle>
                  <CardDescription>–î–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</CardDescription>
                </CardHeader>
              </Card>
              <Card>
                <CardHeader className="text-center">
                  <CardTitle className="text-3xl font-bold text-purple-600">4</CardTitle>
                  <CardDescription>–õ—é–±–∏–º—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</CardDescription>
                </CardHeader>
              </Card>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'].map((day, index) => (
                    <div key={day} className="flex items-center space-x-3">
                      <span className="w-20 text-sm text-gray-600">{day}</span>
                      <div className="flex-1 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-blue-500 rounded-full h-2 transition-all"
                          style={{ width: `${Math.random() * 80 + 20}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-500">{Math.floor(Math.random() * 20 + 5)}</span>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Floating Action Buttons */}
        <div className="fixed bottom-6 right-6 flex flex-col space-y-3">
          <Button className="rounded-full w-14 h-14 shadow-lg">
            <Icon name="Plus" size={20} />
          </Button>
          <Button variant="secondary" className="rounded-full w-12 h-12 shadow-lg">
            <Icon name="MessageCircle" size={18} />
          </Button>
        </div>
      </div>
    </div>
  );
};

export default Index;